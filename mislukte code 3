// Function Declarations
void endStopChoose();
void motor1Control();
void motor2Control();

// Motor 1 pins (X-axis)
const int stepXPin = 2;   // X.STEP
const int dirXPin = 5;    // X.DIR

// Motor 2 pins (Y-axis)
const int stepYPin = 3;   // Y.STEP
const int dirYPin = 6;    // Y.DIR

// Other pins
const int enPin = 8;       // Enable pin
const int beginSwitch = 9; // Begin switch
const int endSwitch = 10;  // End switch

// Potentiometer for motor 2 speed
const int potPin = A0;     // Potentiometer pin

// Parameters
const int stepsPerRev = 200; // Steps per full rotation
int pulseWidthMicros = 100;  // Microseconds between steps (for motor 1)
int millisBtwnSteps = 1000;  // Time between steps in milliseconds

// Variables for motor 2 speed
int potValue = 0;           // Potentiometer value
int motorSpeed = 0;         // Motor speed

// Timestamps for speed buildup
unsigned long lastStepTimeMotor2 = 0; 
unsigned long motor2StepInterval = 0;

bool endStopState = true;

void setup() {
  Serial.begin(9600);

  // Configure the pins
  pinMode(stepXPin, OUTPUT);
  pinMode(dirXPin, OUTPUT);
  pinMode(stepYPin, OUTPUT);
  pinMode(dirYPin, OUTPUT);
  pinMode(enPin, OUTPUT);
  pinMode(beginSwitch, INPUT_PULLUP);
  pinMode(endSwitch, INPUT_PULLUP);

  // Enable the motors
  digitalWrite(enPin, LOW);  // Enable the motors
}

void loop() {
  endStopChoose();
  motor1Control();
  delay(millisBtwnSteps);  // Delay between step cycles
}

void endStopChoose() {
  if (digitalRead(beginSwitch) == LOW) {
    endStopState = false;
  } else if (digitalRead(endSwitch) == LOW) {
    endStopState = true;
  }
}

void motor1Control() {
  // Set direction based on end stop state
  if (endStopState == true) {
    digitalWrite(dirXPin, LOW);
  } else {
    digitalWrite(dirXPin, HIGH);
  }

  // Generate a step pulse
  digitalWrite(stepXPin, HIGH);
  delayMicroseconds(pulseWidthMicros);
  digitalWrite(stepXPin, LOW);
}
